version: '3.8'

services:
  web-nginx:
    image: nginx:latest
    container_name: web-nginx
    ports:
      - "8080:80"
    networks:
      - app-network

  mongodb-server:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb-data:/data/db
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh -u root -p example --quiet | grep 1
      interval: 5s
      timeout: 10s
      retries: 5

  mysql-server:
    image: mysql:latest
    container_name: mysql-server
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: Informations
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck: # Add this block
      test: mysqladmin ping -u root -p$$MYSQL_ROOT_PASSWORD
      interval: 5s
      timeout: 10s
      retries: 15

  registration-service:
    build: ./register
    ports:
      - "5000:5000"
    networks:
      - app-network
    depends_on:
      mysql-server:
        condition: service_healthy

  course-allocation-service:
    build: ./course_allocation
    ports:
      - "5001:5001"
    networks:
      - app-network
    depends_on:
      mysql-server:
        condition: service_healthy
  
  pdf-uploader:
    build: ./pdf_to_mongodb
    volumes: 
      - ./pdf_to_mongodb/pdfs:/app/pdfs
    networks:
      - app-network
    depends_on:
      mongodb-server:
        condition: service_healthy
volumes:
  mongodb-data:
  mysql-data:

networks:
  app-network:
    driver: bridge