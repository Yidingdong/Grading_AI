# Register a teacher
Invoke-RestMethod -Uri http://localhost:5000/register -Method Post `
  -ContentType "application/json" `
  -Body '{"username": "prof_x", "password": "teach123", "name": "Professor X", "user_type": "teacher"}'

# Student 1
Invoke-RestMethod -Uri http://localhost:5000/register -Method Post `
  -ContentType "application/json" `
  -Body '{"username": "student1", "password": "pass123", "name": "Alice Smith", "user_type": "student"}'

# Student 2
Invoke-RestMethod -Uri http://localhost:5000/register -Method Post `
  -ContentType "application/json" `
  -Body '{"username": "student2", "password": "pass456", "name": "Bob Johnson", "user_type": "student"}'

# Verification
docker exec -it mysql-server mysql -u user -ppassword Informations -e "SELECT id, username, user_type FROM users;"



# Create a Course
Invoke-RestMethod -Uri http://localhost:5001/courses -Method Post `
  -ContentType "application/json" `
  -Body '{"name": "Advanced Python", "duration_weeks": 16, "teacher_id": 1}'

# Assign someome to a Course
Invoke-RestMethod -Uri http://localhost:5001/courses/1/students -Method Put `
  -ContentType "application/json" `
  -Body '{"student_ids": [2, 3]}'

# Check Courses
docker exec -it mysql-server mysql -u user -ppassword Informations -e "SELECT * FROM courses;"

# Check Assignments
docker exec -it mysql-server mysql -u user -ppassword Informations -e "SELECT * FROM student_course;"



# lorem ipsum
docker exec -it hlrs-pdf-uploader-1 python pdf_to_mongodb.py `
  --pdf "/app/pdfs/Lorem_ipsum.pdf" `
  --username "teacher_alice" `
  --course "IT 102" `
  --student-name "John Doe" `
  --student-id "S123" `
  --teacher "prof_x" `
  --category "answer_sheet"

# check MongoDB
docker exec -it mongodb-server mongosh -u root -p example
use Exams
db.pdf_submissions.countDocuments()
db.pdf_submissions.find().pretty()



# Clear everything
docker compose down -v --remove-orphans
docker builder prune -af
docker system prune -a
docker compose build --no-cache
docker compose up